/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javahotelsystem;

import java.awt.HeadlessException;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EsraaSayed
 */


public class ManageReservationsForm extends javax.swing.JFrame {

    /**
     * Creates new form ManageResevationsForm
     */
    Reservation reservation = new Reservation();

    
    public ManageReservationsForm() {
        initComponents();
        reservation.fillReservationJTable(jTable1);
        jTable1.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        dateChooserDialog2 = new datechooser.beans.DateChooserDialog();
        dateChooserDialog3 = new datechooser.beans.DateChooserDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextFieldReservationID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldClientID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldRoomNumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ButtonADDReservation = new javax.swing.JButton();
        ButtonRemoveReservation = new javax.swing.JButton();
        ButtonEditReservation = new javax.swing.JButton();
        ButtonClear = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        dateChooserDateIN = new javax.swing.JTextField();
        dateChooserDateOUT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(7, 67, 180));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Reservation");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(411, 411, 411))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Date in:");

        TextFieldReservationID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TextFieldReservationID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldReservationIDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID:");

        jTextFieldClientID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Client ID:");

        jTextFieldRoomNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldRoomNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRoomNumberActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Room No:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Date out:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservatoin ID", "Client ID", "Room Number", "Date IN", "Date OUT"
            }
        )
        {public boolean isCellEditable(int row, int coloumn){return false;}}
    );
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    ButtonADDReservation.setBackground(new java.awt.Color(204, 0, 51));
    ButtonADDReservation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ButtonADDReservation.setForeground(new java.awt.Color(255, 255, 255));
    ButtonADDReservation.setText("Add New Client");
    ButtonADDReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonADDReservationActionPerformed(evt);
        }
    });

    ButtonRemoveReservation.setBackground(new java.awt.Color(204, 0, 51));
    ButtonRemoveReservation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ButtonRemoveReservation.setForeground(new java.awt.Color(255, 255, 255));
    ButtonRemoveReservation.setText("Remove");
    ButtonRemoveReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonRemoveReservationActionPerformed(evt);
        }
    });

    ButtonEditReservation.setBackground(new java.awt.Color(204, 0, 51));
    ButtonEditReservation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ButtonEditReservation.setForeground(new java.awt.Color(255, 255, 255));
    ButtonEditReservation.setText("Edit");
    ButtonEditReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonEditReservationActionPerformed(evt);
        }
    });

    ButtonClear.setBackground(new java.awt.Color(204, 0, 51));
    ButtonClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ButtonClear.setForeground(new java.awt.Color(255, 255, 255));
    ButtonClear.setText("Clear Fields");
    ButtonClear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonClearActionPerformed(evt);
        }
    });

    jButtonRefresh.setText("Refresh");
    jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRefreshActionPerformed(evt);
        }
    });

    dateChooserDateIN.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            dateChooserDateINActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dateChooserDateOUT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(dateChooserDateIN, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ButtonClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(ButtonADDReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(ButtonEditReservation)
                            .addGap(44, 44, 44)
                            .addComponent(ButtonRemoveReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(58, 58, 58)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(TextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(dateChooserDateIN, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                            .addGap(2, 2, 2))
                        .addComponent(jLabel2))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateChooserDateOUT))
                    .addGap(33, 33, 33)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ButtonRemoveReservation, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(ButtonEditReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonADDReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(59, 59, 59))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // display the selected row data in the JtextField
        // get the JTable model
       
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

        //get the selected row index
        int rIndex = jTable1.getSelectedRow();

        //display data
        TextFieldReservationID.setText(model.getValueAt(rIndex,0).toString());
        jTextFieldClientID.setText(model.getValueAt(rIndex,1).toString());
        jTextFieldRoomNumber.setText(model.getValueAt(rIndex,2).toString());
        dateChooserDateIN.setText(model.getValueAt(rIndex,3).toString());
        dateChooserDateOUT.setText(model.getValueAt(rIndex,3).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void ButtonADDReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonADDReservationActionPerformed
        // TODO add your handling code here:
        try {
            int client_id = Integer.valueOf(jTextFieldClientID.getText());
            int room_number = Integer.valueOf(jTextFieldRoomNumber.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date_in = dateChooserDateIN.getText();
            String date_out = dateChooserDateOUT.getText();
            String toDayDate = dateFormat.format(new Date());
            
            Date din = dateFormat.parse(date_in);
            Date dout = dateFormat.parse(date_out);
            Date tdd = dateFormat.parse(toDayDate);
            
            //if the date_in is after or equal to today date
            if(din.after(tdd) || din.equals(tdd)){
                JOptionPane.showMessageDialog(rootPane, "the DateIN must be After or equal to today's Date", "Date Error", JOptionPane.ERROR_MESSAGE);
            }
            //if the date_out is before date_in or not equal to date_in
            else if(!(dout.after(din) || dout.equals(din))){
                JOptionPane.showMessageDialog(rootPane, "the DateOUT must be After or equal to DateIN", "Date Error", JOptionPane.ERROR_MESSAGE);
            }
            //if everything is ok
            else{
                if (reservation.addReservation(client_id, room_number, date_in, date_out)) {
                    JOptionPane.showMessageDialog(rootPane, "New Reservation added successfully", "Add Reservation", JOptionPane.WARNING_MESSAGE);
                }else {
                    JOptionPane.showMessageDialog(rootPane, "Reservation Not Added", "Add Reservation Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage()+" - Enter the Room number + client ID","Input Fields error",JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservationsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        

    }//GEN-LAST:event_ButtonADDReservationActionPerformed

    private void ButtonRemoveReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRemoveReservationActionPerformed

        try{
            int reservationId = Integer.valueOf(TextFieldReservationID.getText());
            if(reservation.removeReservation(reservationId)){
                JOptionPane.showMessageDialog(rootPane, "Reservation data removed successfully", "Remove Reservation",JOptionPane.INFORMATION_MESSAGE );
            }else{
                JOptionPane.showMessageDialog(rootPane, "Reservation Data Not removed", "Remove Reservation Error",JOptionPane.ERROR_MESSAGE );
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Enter the Reservation data", "fields Error",JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_ButtonRemoveReservationActionPerformed

    private void ButtonEditReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditReservationActionPerformed
        // TODO add your handling code here:
        
        try{
            int reservation_id;
            int roomNumber;
            int clientId;
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date_in = dateChooserDateIN.getText();
            String date_out = dateChooserDateOUT.getText();
        
            reservation_id= Integer.valueOf(TextFieldReservationID.getText());
            roomNumber = Integer.valueOf(jTextFieldRoomNumber.getText());
            clientId = Integer.valueOf(jTextFieldClientID.getText());
            
            String toDayDate = dateFormat.format(new Date());
            
            Date din = dateFormat.parse(date_in);
            Date dout = dateFormat.parse(date_out);
            Date tdd = dateFormat.parse(toDayDate);
            
            //if the date_in is after or equal to today date
            if(din.after(tdd) || din.equals(tdd)){
                JOptionPane.showMessageDialog(rootPane, "the DateIN must be After or equal to today's Date", "Date Error", JOptionPane.ERROR_MESSAGE);
            }
            //if the date_out is before date_in or not equal to date_in
            else if(!(dout.after(din) || dout.equals(din))){
                JOptionPane.showMessageDialog(rootPane, "the DateOUT must be After or equal to DateIN", "Date Error", JOptionPane.ERROR_MESSAGE);
            }
            //if everything is ok
            else{
                if(reservation.editReservation(reservation_id, clientId, roomNumber, date_in, date_out)){
                    JOptionPane.showMessageDialog(rootPane, "Reservation data updated successfully", "Add Reservation",JOptionPane.INFORMATION_MESSAGE );
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Reservation Data Not Updated", "Add Reservation Error",JOptionPane.ERROR_MESSAGE );
                }
            }
            
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Enter the Client ID + the room id + the reservation id", "fields Error",JOptionPane.ERROR_MESSAGE );
        }
        catch(NullPointerException ex){
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Select the date IN and OUT", "fields Error",JOptionPane.ERROR_MESSAGE );
        }catch (ParseException ex) {
            Logger.getLogger(ManageReservationsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        

    }//GEN-LAST:event_ButtonEditReservationActionPerformed

    private void ButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearActionPerformed
        // remove text from all fields
        jTextFieldClientID.setText("");
        TextFieldReservationID.setText("");
        jTextFieldRoomNumber.setText("");
        //remove date from calender
//        dateChooserDateIN.setData(new Date());
//        dateChooserDateIN.setData(new Date());
        
                

    }//GEN-LAST:event_ButtonClearActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
//        // TODO add your handling code here:
        //clear the table first
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservatoin ID", "Client ID", "Room Number", "Date IN", "Date OUT"}));
        //populate the table
        reservation.fillReservationJTable(jTable1);
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void TextFieldReservationIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldReservationIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldReservationIDActionPerformed

    private void jTextFieldRoomNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRoomNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRoomNumberActionPerformed

    private void dateChooserDateINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateChooserDateINActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserDateINActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageReservationsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonADDReservation;
    private javax.swing.JButton ButtonClear;
    private javax.swing.JButton ButtonEditReservation;
    private javax.swing.JButton ButtonRemoveReservation;
    private javax.swing.JTextField TextFieldReservationID;
    private javax.swing.JTextField dateChooserDateIN;
    private javax.swing.JTextField dateChooserDateOUT;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private datechooser.beans.DateChooserDialog dateChooserDialog2;
    private datechooser.beans.DateChooserDialog dateChooserDialog3;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldRoomNumber;
    // End of variables declaration//GEN-END:variables
}
